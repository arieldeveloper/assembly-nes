# File for config of the CC65 Asssembler / Linker
# ----------------------------------------------

#  MEMORY - describes the memory layout of output file
#  The header, PRG and CHR all go inside the ROM file outputted

MEMORY {
    # These are all mapped to the 6502 NES memory space
    ZP:                                     # Zero page
        start = $00,
        size = $100,
        file = "";
    OAM:                                    # object attribute mapping, holds all the sprites (256 bytes) so we can transfer to PPU using DMA at $4014
        start = $0200,
        size = $100,
        file = "";
    RAM:                                    # general purpose RAM
        start = $0300,
        size = $500,
        file = "";
        
    # These all go into the ROM file
    HDR:                                    # Header, which is held inside zero page
        start = $0000,
        size = $10,                        
        file = %O,
        fill = yes;                         # defaults to filling with zero
    PRG:                                    # PRG-ROM, holds the machine code of the executable
        start = $8000,
        size = $8000,
        file = %O,
        fill = yes;
    CHR:                                    # graphics data
        start = $0000,
        size = $2000,
        file = %O,
        fill = yes;
}

# Segments of the RAM area that we are using
# type=ro means that segment is going into the catridge memory
SEGMENTS {
    ZEROPAGE: 
        load = ZP,
        type = rw;
    HEADER:
        load = HDR,
        type = ro;
    CODE:
        load = PRG,
        start = $8000,
        type = ro;
    VECTOR_TABLE:   # holds reset, interrupt handlers 
        load = PRG,
        start = $FFFA;
    CHR_FILE:  # CHR file needs to go into CHR in ROM
        load = CHR,
        type = ro;  
}
